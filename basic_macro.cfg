#####################################################################
# 	Macro
#####################################################################
#
#   This section contains basic macros that needed in several other
#   files. Getting them all to a single place should help to only
#   use what needed without hunting down several other files.
#
#####################################################################
##  Clear display output after Duration in seconds
##  Use: UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117

## Reset SD File after Print_END or CANCEL_PRINT
## This will avoid the reprint option in Mainsail after a print is done
[delayed_gcode _DELAY_SDCARD_RESET_FILE]
gcode:
  SDCARD_RESET_FILE

[gcode_macro DIRECT_MOVE]
gcode:
  {% set out_param = ["G0"] %}
  {% set _dummy = out_param.append("X%s" % params.X) if params.X %}
  {% set _dummy = out_param.append("Y%s" % params.Y) if params.Y %}
  {% set _dummy = out_param.append("Z%s" % params.Z) if params.Z %}
  {% set _dummy = out_param.append("E%s" % params.E) if params.E %}
  {% set _dummy = out_param.append("F%s" % params.F) if params.F %}
  {out_param|join(" ")}

#####################################################################
#  realtime save_var debug echo
#####################################################################

# [gcode_macro SAVE_VARIABLE]
# description: SAVE_VARIABLE, with console echo if so enabled
# # does type conversion of numbers too, pulling them out of strings
# # optional param RAW, if passed and != 0, bypasses the type conversion
# rename_existing: _SAVE_VARIABLE_STOCK
# gcode:
# 	{% if printer["gcode_macro _USER_VARIABLE"].respond.codeflow %} _proc_start function=SAVE_VARIABLE func_params='"{rawparams|string}"'  {% endif %}
# 	{% set save_var = params.VARIABLE|lower %}			# lower case var names are required
# 	{% set save_val = params.VALUE %}
# 	{% set save_raw = params.RAW|default(0)|int %}
# 	{% if printer["gcode_macro _debug_vars"].force_svv_typing and save_raw == 0 %}
# 		## forcibly save numbers as numbers (int/float) and not within strings, 
# 		## even though passed numbers may be stringified
# 		{% if save_val|replace("\"","")|int|string == save_val|replace("\"","")|string %}		# test for int
# 			{% set svv_VALUE = save_val|replace("\"","")|int %}									# it's an int, so strip any string encapsulations
# 		{% elif save_val|replace("\"","")|float|string == save_val|replace("\"","")|string %}	# test for float
# 			{% set svv_VALUE = save_val|replace("\"","")|float %}								# it's a float, so strip any string encapsulations
# 		{% else %}																				# it's not a number
# 			{% set svv_VALUE = "'" + save_val|string + "'" %}									# so wrap in string encapsulation chars
# 		{% endif %}
# 	{% endif %}
# 	{% if printer["gcode_macro _debug_vars"].save_var_debug %} M118 _>_ _SAVE_VARIABLE_STOCK: VARIABLE={save_var} VALUE={svv_VALUE} _<_ {% endif %}
# 	_SAVE_VARIABLE_STOCK VARIABLE={save_var} VALUE={svv_VALUE}
# 	{% if printer["gcode_macro _USER_VARIABLE"].respond.codeflow %} _proc_end function=SAVE_VARIABLE {% endif %}

##  action_respond_info will be always executed at the beginning of an macro evaluation.
##  Use _PRINT_AR if you need the order of several console outputs in the order given by the macro
##  Use: _PRINT_AR T="QGL forced by PRINT_START"
[gcode_macro _PRINT_AR]
description: Helper: Action response
gcode:
  {% if params.SHOW_LCD|default('false') == 'true' %} M117 {params.T} {% endif %}
  {action_respond_info(params.T)}

[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set out = ['mcu build version:'] %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% if name2 is in ['mcu_version'] %}
        {% set _dummy = out.append("%s: %s" % (name1, printer[name1][name2])) %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(out|join("\n"))}
  M115.1

[gcode_macro M118]
description: To trap/wrap FW M118 w/ action_respond_info vs. FW's implementation (supports numeric/special char starts)
rename_existing: M118.1
gcode:
	{ action_respond_info(rawparams) }
